"""
Given a string s, return the longest 
palindromic substring in s.
Example 1:
Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.

Example 2:
Input: s = "cbbd"
Output: "bb"
"""

# CODE
class Solution:
  def longestPalindrome(self, s: str) -> str:
    def expand(s, l, r):
        while l >= 0 and r < len(s) and s[l] == s[r]:
            l -= 1
            r += 1
        return s[l+1:r]

    s = s.replace(" ", "").lower()
    result = ""
    for i in range(len(s)):
      sub1 = expand(s, i, i)
      if len(sub1) > len(result):
        result = sub1
      sub2 = expand(s, i, i+1)
      if len(sub2) > len(result):
        result = sub2
    return result

s = 'radar is in high voltage mamanamam'
solution = Solution()
result = solution.longestPalindrome(s)
print("Input String: ", s)
print("Output Palindrome String: ", result)

#OUTPUT:
"""
Input String:  radar is in high voltage mamanamam
Output Palindrome String:  mamanamam
"""
